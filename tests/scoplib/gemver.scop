#                                                     
#          <|                                         
#           A                                         
#          /.\                                       
#     <|  [""M#                                     
#      A   | #            Clan McCloog Castle         
#     /.\ [""M#           [Generated by Clan 0.7.1]
#    [""M# | #  U"U#U                              
#     | #  | #  \ .:/                                
#     | #  | #___| #                                  
#     | "--'     .-"                                
#   |"-"-"-"-"-#-#-##                            
#   |     # ## ######                                 
#    \       .::::'/                                 
#     \      ::::'/                                  
#   :8a|    # # ##                                    
#   ::88a      ###                                    
#  ::::888a  8a ##::.                                 
#  ::::::888a88a[]::::                                
# :::::::::SUNDOGa8a::::. ..                          
# :::::8::::888:Y8888:::::::::...                     
#::':::88::::888::Y88a______________________________________________________
#:: ::::88a::::88a:Y88a                                  __---__-- __
#' .: ::Y88a:::::8a:Y88a                            __----_-- -------_-__
#  :' ::::8P::::::::::88aa.                   _ _- --  --_ --- __  --- __--
#.::  :::::::::::::::::::Y88as88a...s88aa.
#
# [File generated by the OpenScop Library 0.8.4]
# [SCoPLib format]

SCoP

# =============================================== Global
# Language
C

# Context
0 3

# Parameters are provided
1
# Parameter names
N

# Number of statements
4

# =============================================== Statement 1
# ----------------------------------------------  1.1 Domain
# Iteration domain
1
5 5
# e/i|  i    N |  1  
   1    1    0    0    0    ## i >= 0
   1   -1    0    1   -1    ## -i+N-1 >= 0
   1    0    0    1   -1    ## N-1 >= 0
   1    0    1    0    0    ## j >= 0
   1    0   -1    1   -1    ## -j+N-1 >= 0

# ----------------------------------------------  1.2 Scattering
# Scattering function is provided
1
5 5
# e/i|  i    j |  N |  1  
   0    0    0    0    0    ## c1 == 0
   0    1    0    0    0    ## c2 == i
   0    0    0    0    0    ## c3 == 0
   0    0    1    0    0    ## c4 == j
   0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  1.3 Access
# Access informations are provided
1
# Read access informations
6 5
   4    1    0    0    0    ## [1] == i
   0     0    1    0    0    ## [2] == j
   5    1    0    0    0    ## [1] == i
   6    0    1    0    0    ## [1] == j
   7    1    0    0    0    ## [1] == i
   8    0    1    0    0    ## [1] == j
# Write access informations
2 5
   4    1    0    0    0    ## [1] == i
   0     0    1    0    0    ## [2] == j

# ----------------------------------------------  1.4 Body
# Statement body is provided
1
# List of original iterators
i j
# Statement body expression
A[i][j]=A[i][j]+u1[i]*v1[j]+u2[i]*v2[j];

# =============================================== Statement 2
# ----------------------------------------------  2.1 Domain
# Iteration domain
1
5 5
# e/i|  i    N |  1  
   1    1    0    0    0    ## i >= 0
   1   -1    0    1   -1    ## -i+N-1 >= 0
   1    0    0    1   -1    ## N-1 >= 0
   1    0    1    0    0    ## j >= 0
   1    0   -1    1   -1    ## -j+N-1 >= 0

# ----------------------------------------------  2.2 Scattering
# Scattering function is provided
1
5 5
# e/i|  i    j |  N |  1  
   0    0    0    0    1    ## c1 == 1
   0    1    0    0    0    ## c2 == i
   0    0    0    0    0    ## c3 == 0
   0    0    1    0    0    ## c4 == j
   0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  2.3 Access
# Access informations are provided
1
# Read access informations
5 5
   9    1    0    0    0    ## [1] == i
  10    0    0    0   0    ## Arr == beta
   4    1    0    0    0    ## [1] == i
   0     0    1    0    0    ## [2] == j
  11    0    1    0    0    ## [1] == j
# Write access informations
1 5
   9    1    0    0    0    ## [1] == i

# ----------------------------------------------  2.4 Body
# Statement body is provided
1
# List of original iterators
i j
# Statement body expression
x[i]=x[i]+beta*A[i][j]*y[j];

# =============================================== Statement 3
# ----------------------------------------------  3.1 Domain
# Iteration domain
1
3 4
# e/i|  i |  N |  1  
   1    1    0    0    ## i >= 0
   1   -1    1   -1    ## -i+N-1 >= 0
   1    0    1   -1    ## N-1 >= 0

# ----------------------------------------------  3.2 Scattering
# Scattering function is provided
1
3 4
# e/i|  i |  N |  1  
   0    0    0    2    ## c1 == 2
   0    1    0    0    ## c2 == i
   0    0    0    0    ## c3 == 0

# ----------------------------------------------  3.3 Access
# Access informations are provided
1
# Read access informations
2 4
   9    1    0    0    ## [1] == i
  12    1    0    0    ## [1] == i
# Write access informations
1 4
   9    1    0    0    ## [1] == i

# ----------------------------------------------  3.4 Body
# Statement body is provided
1
# List of original iterators
i
# Statement body expression
x[i]=x[i]+z[i];

# =============================================== Statement 4
# ----------------------------------------------  4.1 Domain
# Iteration domain
1
5 5
# e/i|  i    N |  1  
   1    1    0    0    0    ## i >= 0
   1   -1    0    1   -1    ## -i+N-1 >= 0
   1    0    0    1   -1    ## N-1 >= 0
   1    0    1    0    0    ## j >= 0
   1    0   -1    1   -1    ## -j+N-1 >= 0

# ----------------------------------------------  4.2 Scattering
# Scattering function is provided
1
5 5
# e/i|  i    j |  N |  1  
   0    0    0    0    3    ## c1 == 3
   0    1    0    0    0    ## c2 == i
   0    0    0    0    0    ## c3 == 0
   0    0    1    0    0    ## c4 == j
   0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  4.3 Access
# Access informations are provided
1
# Read access informations
5 5
  13    1    0    0    0    ## [1] == i
  14    0    0    0   0    ## Arr == alpha
   4    1    0    0    0    ## [1] == i
   0     0    1    0    0    ## [2] == j
   9    0    1    0    0    ## [1] == j
# Write access informations
1 5
  13    1    0    0    0    ## [1] == i

# ----------------------------------------------  4.4 Body
# Statement body is provided
1
# List of original iterators
i j
# Statement body expression
w[i]=w[i]+alpha*A[i][j]*x[j];

# =============================================== Options
<arrays>
# Number of arrays
14
# Mapping array-identifiers/array-names
1 i
2 N
3 j
4 A
5 u1
6 v1
7 u2
8 v2
9 x
10 beta
11 y
12 z
13 w
14 alpha
</arrays>
