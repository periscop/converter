#                                                     
#          <|                                         
#           A                                         
#          /.\                                       
#     <|  [""M#                                     
#      A   | #            Clan McCloog Castle         
#     /.\ [""M#           [Generated by Clan 0.7.1]
#    [""M# | #  U"U#U                              
#     | #  | #  \ .:/                                
#     | #  | #___| #                                  
#     | "--'     .-"                                
#   |"-"-"-"-"-#-#-##                            
#   |     # ## ######                                 
#    \       .::::'/                                 
#     \      ::::'/                                  
#   :8a|    # # ##                                    
#   ::88a      ###                                    
#  ::::888a  8a ##::.                                 
#  ::::::888a88a[]::::                                
# :::::::::SUNDOGa8a::::. ..                          
# :::::8::::888:Y8888:::::::::...                     
#::':::88::::888::Y88a______________________________________________________
#:: ::::88a::::88a:Y88a                                  __---__-- __
#' .: ::Y88a:::::8a:Y88a                            __----_-- -------_-__
#  :' ::::8P::::::::::88aa.                   _ _- --  --_ --- __  --- __--
#.::  :::::::::::::::::::Y88as88a...s88aa.
#
# [File generated by the OpenScop Library 0.8.4]
# [SCoPLib format]

SCoP

# =============================================== Global
# Language
C

# Context
0 3

# Parameters are provided
1
# Parameter names
n

# Number of statements
3

# =============================================== Statement 1
# ----------------------------------------------  1.1 Domain
# Iteration domain
1
3 4
# e/i|  k |  n |  1  
   1    1    0   -1    ## k-1 >= 0
   1   -1    1    0    ## -k+n >= 0
   1    0    1   -1    ## n-1 >= 0

# ----------------------------------------------  1.2 Scattering
# Scattering function is provided
1
3 4
# e/i|  k |  n |  1  
   0    0    0    0    ## c1 == 0
   0    1    0    0    ## c2 == k
   0    0    0    0    ## c3 == 0

# ----------------------------------------------  1.3 Access
# Access informations are provided
1
# Read access informations
2 4
   4    1    0    0    ## [1] == k
   0     1    0    0    ## [2] == k
# Write access informations
1 4
   3    0    0   0    ## Arr == s

# ----------------------------------------------  1.4 Body
# Statement body is provided
1
# List of original iterators
k
# Statement body expression
s=1/a[k][k];

# =============================================== Statement 2
# ----------------------------------------------  2.1 Domain
# Iteration domain
1
6 5
# e/i|  k    n |  1  
   1    1    0    0   -1    ## k-1 >= 0
   1   -1    0    1    0    ## -k+n >= 0
   1    0    0    1   -1    ## n-1 >= 0
   1   -1    1    0   -1    ## -k+l-1 >= 0
   1    0   -1    1    0    ## -l+n >= 0
   1   -1    0    1   -1    ## -k+n-1 >= 0

# ----------------------------------------------  2.2 Scattering
# Scattering function is provided
1
5 5
# e/i|  k    l |  n |  1  
   0    0    0    0    0    ## c1 == 0
   0    1    0    0    0    ## c2 == k
   0    0    0    0    1    ## c3 == 1
   0    0    1    0    0    ## c4 == l
   0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  2.3 Access
# Access informations are provided
1
# Read access informations
3 5
   4    0    1    0    0    ## [1] == l
   0     1    0    0    0    ## [2] == k
   3    0    0    0   0    ## Arr == s
# Write access informations
2 5
   4    0    1    0    0    ## [1] == l
   0     1    0    0    0    ## [2] == k

# ----------------------------------------------  2.4 Body
# Statement body is provided
1
# List of original iterators
k l
# Statement body expression
a[l][k]=a[l][k]*s;

# =============================================== Statement 3
# ----------------------------------------------  3.1 Domain
# Iteration domain
1
8 6
# e/i|  k    n |  1  
   1    1    0    0    0   -1    ## k-1 >= 0
   1   -1    0    0    1    0    ## -k+n >= 0
   1    0    0    0    1   -1    ## n-1 >= 0
   1   -1    1    0    0   -1    ## -k+j-1 >= 0
   1    0   -1    0    1    1    ## -j+n+1 >= 0
   1   -1    0    1    0   -1    ## -k+i-1 >= 0
   1    0    0   -1    1    0    ## -i+n >= 0
   1   -1    0    0    1   -1    ## -k+n-1 >= 0

# ----------------------------------------------  3.2 Scattering
# Scattering function is provided
1
7 6
# e/i|  k    j    i |  n |  1  
   0    0    0    0    0    0    ## c1 == 0
   0    1    0    0    0    0    ## c2 == k
   0    0    0    0    0    2    ## c3 == 2
   0    0    1    0    0    0    ## c4 == j
   0    0    0    0    0    0    ## c5 == 0
   0    0    0    1    0    0    ## c6 == i
   0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  3.3 Access
# Access informations are provided
1
# Read access informations
6 6
   4    0    0    1    0    0    ## [1] == i
   0     0    1    0    0    0    ## [2] == j
   4    1    0    0    0    0    ## [1] == k
   0     0    1    0    0    0    ## [2] == j
   4    0    0    1    0    0    ## [1] == i
   0     1    0    0    0    0    ## [2] == k
# Write access informations
2 6
   4    0    0    1    0    0    ## [1] == i
   0     0    1    0    0    0    ## [2] == j

# ----------------------------------------------  3.4 Body
# Statement body is provided
1
# List of original iterators
k j i
# Statement body expression
a[i][j]=a[i][j]-a[k][j]*a[i][k];

# =============================================== Options
<arrays>
# Number of arrays
7
# Mapping array-identifiers/array-names
1 k
2 n
3 s
4 a
5 l
6 j
7 i
</arrays>
